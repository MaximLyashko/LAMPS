#include "Spi.h"

#define SCK_PIN 13   // Clock
#define MISO_PIN 12
#define MOSI_PIN 11
#define SS_PIN 10    // Control Signal
#define laserEn 9    // laser enable signal

//------ Controls -------------------------
int OffsetX = 4095;
int OffsetY = 0;
int textSpeed = 15;
int windowX = 0;
int minWindow = 600;
int maxWindow = 3800;
int prevX = 0;
int scaleY = 1;
int scaleX = 1;

void setup()
{
  Serial.begin(9600);
  pinMode(laserEn, OUTPUT);
  SPCR = (1<<SPE)|(1<<MSTR)|(1<<CPHA);
  //clr=SPSR;
  //clr=SPDR;
  delay(10);
  setCoords(2048,2048,0);    // setCoords(x, y, laserEn);
}

void loop()
{
  for (OffsetX = -4000; OffsetX < 12000; OffsetX++)
  {
    OffsetX = OffsetX + textSpeed;
    // Merry
setCoords(0,2159,0);
setCoords(0,2159,0);
setCoords(0,2159,0);
setCoords(0,2159,0);
setCoords(0,2159,0);
setCoords(0,2159,0);
setCoords(0,2159,0);
setCoords(0,2159,0);
setCoords(0,2159,0);
setCoords(0,2159,0);
setCoords(0,2159,1);
setCoords(84,2271,1);
setCoords(156,2335,1);
setCoords(204,2335,1);
setCoords(156,2255,1);
setCoords(84,2143,1);
setCoords(0,1984,1);
setCoords(72,2079,1);
setCoords(180,2207,1);
setCoords(276,2319,1);
setCoords(300,2271,1);
setCoords(228,2175,1);
setCoords(132,2016,1);
setCoords(264,2175,1);
setCoords(396,2335,1);
setCoords(432,2367,1);
setCoords(396,2239,1);
setCoords(324,2143,1);
setCoords(252,2016,1);
setCoords(276,1984,1);
setCoords(396,2048,1);
setCoords(468,2079,1);
setCoords(468,2143,1);
setCoords(420,2143,1);
setCoords(384,2095,1);
setCoords(372,2016,1);
setCoords(420,1984,1);
setCoords(516,2063,1);
setCoords(564,2159,1);
setCoords(540,2127,1);
setCoords(588,2111,1);
setCoords(540,2048,1);
setCoords(528,2000,1);
setCoords(588,2032,1);
setCoords(660,2111,1);
setCoords(672,2159,1);
setCoords(660,2111,1);
setCoords(708,2111,1);
setCoords(672,2048,1);
setCoords(660,2000,1);
setCoords(732,2032,1);
setCoords(804,2143,1);
setCoords(780,2016,1);
setCoords(804,2016,1);
setCoords(900,2143,1);
setCoords(816,1984,1);
setCoords(744,1872,1);
setCoords(684,1824,1);
setCoords(684,1904,1);
setCoords(756,1952,1);
setCoords(888,2000,1);
setCoords(888,2000,0);

// Christmas
setCoords(1536,2335,0);
setCoords(1536,2335,0);
setCoords(1536,2335,0);
setCoords(1536,2335,0);
setCoords(1536,2335,0);
setCoords(1536,2335,0);
setCoords(1536,2335,1);
setCoords(1464,2303,1);
setCoords(1416,2239,1);
setCoords(1416,2175,1);
setCoords(1512,2271,1);
setCoords(1512,2399,1);
setCoords(1428,2351,1);
setCoords(1320,2287,1);
setCoords(1224,2175,1);
setCoords(1200,2016,1);
setCoords(1284,1984,1);
setCoords(1392,2048,1);
setCoords(1476,2111,1);
setCoords(1584,2207,1);
setCoords(1656,2351,1);
setCoords(1560,2175,1);
setCoords(1488,2048,1);
setCoords(1464,2016,1);
setCoords(1560,2095,1);
setCoords(1608,2127,1);
setCoords(1584,2079,1);
setCoords(1524,2016,1);
setCoords(1584,2016,1);
setCoords(1656,2079,1);
setCoords(1704,2159,1);
setCoords(1680,2127,1);
setCoords(1728,2111,1);
setCoords(1680,2079,1);
setCoords(1668,2000,1);
setCoords(1752,2048,1);
setCoords(1990,2239,1);
setCoords(1924,2143,1);
setCoords(1824,2143,0);
setCoords(1824,2143,0);
setCoords(1824,2143,0);
setCoords(1776,2048,1);
setCoords(1776,2048,0);
setCoords(1776,2048,0);
setCoords(1776,2048,0);
setCoords(1824,2143,1);
setCoords(1824,2143,1);
setCoords(1788,1984,1);
setCoords(1848,2032,1);
setCoords(1944,2143,1);
setCoords(1944,2048,1);
setCoords(1896,2016,1);
setCoords(1848,2016,1);
setCoords(1944,2016,1);
setCoords(2063,2111,1);
setCoords(2135,2255,1);
setCoords(2087,2207,1);
setCoords(2004,2175,1);
setCoords(2063,2175,1);
setCoords(2159,2175,1);
setCoords(2111,2175,1);
setCoords(2063,2143,1);
setCoords(2016,2048,1);
setCoords(2040,2000,1);
setCoords(2111,2063,1);
setCoords(2183,2127,1);
setCoords(2135,2063,1);
setCoords(2111,2016,1);
setCoords(2207,2127,1);
setCoords(2231,2111,1);
setCoords(2195,2048,1);
setCoords(2159,1984,1);
setCoords(2219,2095,1);
setCoords(2279,2143,1);
setCoords(2303,2111,1);
setCoords(2255,2063,1);
setCoords(2231,2016,1);
setCoords(2291,2016,1);
setCoords(2267,1984,1);
setCoords(2303,2016,1);
setCoords(2351,2079,1);
setCoords(2411,2143,1);
setCoords(2459,2095,1);
setCoords(2375,2079,1);
setCoords(2339,2016,1);
setCoords(2375,2016,1);
setCoords(2423,2048,1);
setCoords(2447,2111,1);
setCoords(2447,2143,1);
setCoords(2423,2048,1);
setCoords(2411,1984,1);
setCoords(2435,2000,1);
setCoords(2363,2016,1);
setCoords(2447,2000,1);
setCoords(2531,2079,1);
setCoords(2591,2143,1);
setCoords(2567,2048,1);
setCoords(2519,2016,1);
setCoords(2471,2016,1);
setCoords(2543,1984,1);
setCoords(2639,2016,1);
setCoords(2690,2016,1);

// from
setCoords(2939,1984,0);
setCoords(2939,1984,0);
setCoords(2939,1984,0);
setCoords(2939,1984,0);
setCoords(2939,1984,0);
setCoords(2939,1984,1);
setCoords(3035,2079,1);
setCoords(3131,2207,1);
setCoords(3203,2303,1);
setCoords(3227,2335,1);
setCoords(3155,2271,1);
setCoords(3083,2175,1);
setCoords(3035,2048,1);
setCoords(2975,1888,1);
setCoords(2963,1792,1);
setCoords(2987,1824,1);
setCoords(3035,1888,1);
setCoords(3059,1968,1);
setCoords(3083,2048,1);
setCoords(3059,2063,1);
setCoords(3023,2016,1);
setCoords(3059,1984,1);
setCoords(3167,2048,1);
setCoords(3215,2175,1);
setCoords(3191,2111,1);
setCoords(3251,2111,1);
setCoords(3239,2079,1);
setCoords(3191,2016,1);
setCoords(3203,1984,1);
setCoords(3275,2063,1);
setCoords(3419,2111,1);
setCoords(3299,2048,1);
setCoords(3287,1984,1);
setCoords(3335,1984,1);
setCoords(3371,2032,1);
setCoords(3383,2079,1);
setCoords(3299,2127,1);
setCoords(3299,2079,1);
setCoords(3347,2048,1);
setCoords(3383,2000,1);
setCoords(3443,2048,1);
setCoords(3491,2127,1);
setCoords(3479,2079,1);
setCoords(3443,1984,1);
setCoords(3491,2048,1);
setCoords(3515,2111,1);
setCoords(3563,2095,1);
setCoords(3515,2032,1);
setCoords(3479,1984,1);
setCoords(3539,2048,1);
setCoords(3587,2111,1);
setCoords(3635,2111,1);
setCoords(3611,2079,1);
setCoords(3587,2032,1);
setCoords(3563,1984,1);
setCoords(3599,1984,1);
setCoords(3599,1984,0);

// the
setCoords(3935,1984,0);
setCoords(3935,1984,0);
setCoords(3935,1984,0);
setCoords(3935,1984,0);
setCoords(3935,1984,0);
setCoords(3935,1984,1);
setCoords(4007,2048,1);
setCoords(4091,2143,1);
setCoords(4175,2399,1);
setCoords(4115,2143,1);
setCoords(4019,2143,1);
setCoords(4103,2143,1);
setCoords(4175,2127,1);
setCoords(3959,2143,1);
setCoords(4079,2063,1);
setCoords(4055,1984,1);
setCoords(4127,2016,1);
setCoords(4223,2143,1);
setCoords(4307,2271,1);
setCoords(4343,2335,1);
setCoords(4295,2287,1);
setCoords(4211,2127,1);
setCoords(4151,1984,1);
setCoords(4235,2095,1);
setCoords(4295,2111,1);
setCoords(4247,2048,1);
setCoords(4223,2000,1);
setCoords(4295,2016,1);
setCoords(4379,2048,1);
setCoords(4415,2111,1);
setCoords(4391,2143,1);
setCoords(4343,2095,1);
setCoords(4319,2016,1);
setCoords(4343,1984,1);
setCoords(4403,1984,1);
setCoords(4343,1984,1);
setCoords(4390,1984,1);

// Hardware
setCoords(4955,2319,0);
setCoords(4955,2319,0);
setCoords(4955,2319,0);
setCoords(4955,2319,0);
setCoords(4955,2319,0);
setCoords(4955,2319,1);
setCoords(5027,2367,1);
setCoords(5099,2367,1);
setCoords(5051,2303,1);
setCoords(4955,2143,1);
setCoords(4883,2048,1);
setCoords(4763,1952,1);
setCoords(4715,2048,1);
setCoords(4799,2111,1);
setCoords(4907,2143,1);
setCoords(5063,2159,1);
setCoords(5123,2175,1);
setCoords(5111,2207,1);
setCoords(5171,2303,1);
setCoords(5219,2367,1);
setCoords(5147,2255,1);
setCoords(5039,2079,1);
setCoords(4991,2016,1);
setCoords(5051,1984,1);
setCoords(5135,2063,1);
setCoords(5195,2111,1);
setCoords(5267,2095,1);
setCoords(5171,2079,1);
setCoords(5147,2016,1);
setCoords(5171,2016,1);
setCoords(5219,2048,1);
setCoords(5243,2095,1);
setCoords(5231,2143,1);
setCoords(5219,2079,1);
setCoords(5219,2016,1);
setCoords(5255,2016,1);
setCoords(5291,2095,1);
setCoords(5351,2175,1);
setCoords(5339,2143,1);
setCoords(5387,2111,1);
setCoords(5363,2111,1);
setCoords(5339,2048,1);
setCoords(5339,1984,1);
setCoords(5411,2016,1);
setCoords(5435,2095,1);
setCoords(5471,2127,1);
setCoords(5543,2127,1);
setCoords(5447,2095,1);
setCoords(5411,2032,1);
setCoords(5459,2016,1);
setCoords(5507,2048,1);
setCoords(5579,2175,1);
setCoords(5675,2303,1);
setCoords(5627,2271,1);
setCoords(5555,2175,1);
setCoords(5531,2095,1);
setCoords(5507,1984,1);
setCoords(5579,2032,1);
setCoords(5663,2143,1);
setCoords(5651,2079,1);
setCoords(5615,2016,1);
setCoords(5651,2016,1);
setCoords(5699,2079,1);
setCoords(5723,2143,1);
setCoords(5687,2079,1);
setCoords(5687,2016,1);
setCoords(5735,2032,1);
setCoords(5783,2111,1);
setCoords(5747,2127,1);
setCoords(5735,2048,1);
setCoords(5747,1984,1);
setCoords(5795,2048,1);
setCoords(5831,2111,1);
setCoords(5915,2143,1);
setCoords(5927,2095,1);
setCoords(5843,2095,1);
setCoords(5795,2016,1);
setCoords(5855,2016,1);
setCoords(5903,2079,1);
setCoords(5915,2111,1);
setCoords(5867,2032,1);
setCoords(5903,2000,1);
setCoords(5963,2048,1);
setCoords(5999,2095,1);
setCoords(6011,2175,1);
setCoords(6011,2143,1);
setCoords(6011,2111,1);
setCoords(6047,2111,1);
setCoords(6035,2079,1);
setCoords(5987,2016,1);
setCoords(6011,2000,1);
setCoords(6107,2048,1);
setCoords(6202,2095,1);
setCoords(6178,2143,1);
setCoords(6095,2079,1);
setCoords(6083,2048,1);
setCoords(6131,1984,1);
setCoords(6358,2000,1);
setCoords(6358,2000,1);

// Group
setCoords(7030,2351,0);
setCoords(7030,2351,0);
setCoords(7030,2351,0);
setCoords(7030,2351,0);
setCoords(7030,2351,1);
setCoords(6958,2303,1);
setCoords(6970,2239,1);
setCoords(7042,2287,1);
setCoords(7066,2367,1);
setCoords(6982,2399,1);
setCoords(6838,2287,1);
setCoords(6730,2175,1);
setCoords(6706,2048,1);
setCoords(6778,2032,1);
setCoords(6898,2095,1);
setCoords(6982,2191,1);
setCoords(7006,2207,1);
setCoords(6922,2095,1);
setCoords(6874,1984,1);
setCoords(6790,1888,1);
setCoords(6706,1856,1);
setCoords(6658,1856,1);
setCoords(6694,1952,1);
setCoords(6778,2016,1);
setCoords(6874,2016,1);
setCoords(6946,2016,1);
setCoords(7018,2048,1);
setCoords(7066,2175,1);
setCoords(7042,2127,1);
setCoords(7090,2127,1);
setCoords(7066,2079,1);
setCoords(7042,2016,1);
setCoords(7114,2032,1);
setCoords(7150,2079,1);
setCoords(7234,2143,1);
setCoords(7162,2048,1);
setCoords(7162,2016,1);
setCoords(7222,2048,1);
setCoords(7234,2111,1);
setCoords(7210,2143,1);
setCoords(7174,2095,1);
setCoords(7210,2048,1);
setCoords(7258,2016,1);
setCoords(7282,2079,1);
setCoords(7342,2143,1);
setCoords(7306,2079,1);
setCoords(7306,1984,1);
setCoords(7354,2048,1);
setCoords(7402,2127,1);
setCoords(7354,2048,1);
setCoords(7354,2016,1);
setCoords(7402,2016,1);
setCoords(7450,2079,1);
setCoords(7522,2143,1);
setCoords(7522,2143,1);
setCoords(7474,2079,1);
setCoords(7450,2016,1);
setCoords(7402,1936,1);
setCoords(7354,1872,1);
setCoords(7378,1920,1);
setCoords(7426,1984,1);
setCoords(7498,2079,1);
setCoords(7546,2111,1);
setCoords(7570,2111,1);
setCoords(7570,2079,1);
setCoords(7546,2032,1);
setCoords(7498,2016,1);
setCoords(7474,2032,1);
setCoords(7522,2016,1);
setCoords(7570,2000,1);
setCoords(7630,2048,1);
setCoords(7630,2048,0);
}

}

void setCoords(int x, int y, boolean Las_EN)
{
  x = (x*scaleX) - OffsetX;
  y = (y*scaleY) - OffsetY;
  if (x > 0 && x < 4095)
  {
  if (x < minWindow || x > maxWindow)
  {
    digitalWrite(laserEn, LOW);
  }
  else
  {
  digitalWrite(laserEn, Las_EN);
  }
  // Run the send coords cycles twice to get the TLV5618 to take
  digitalWrite(SS_PIN, LOW);
  Spi.transfer((0x5*16)|(x/256));
  Spi.transfer(x & 0xFF);
  digitalWrite(SS_PIN, HIGH);
  digitalWrite(SS_PIN, LOW);
  Spi.transfer((0x5*16)|(x/256));
  Spi.transfer(x & 0xFF);
  digitalWrite(SS_PIN, HIGH);
  digitalWrite(SS_PIN, LOW);
  Spi.transfer((0xC*16)|(y/256));
  Spi.transfer(y & 0xFF);
  digitalWrite(SS_PIN, HIGH);
  digitalWrite(SS_PIN, LOW);
  Spi.transfer((0xC*16)|(y/256));
  Spi.transfer(y & 0xFF);
  digitalWrite(SS_PIN, HIGH);
  //delayMicroseconds(2);
  }
  else
  {
  digitalWrite(laserEn, 0);
  //delayMicroseconds(15);
  }
}
